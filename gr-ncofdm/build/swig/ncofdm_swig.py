# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.11
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_ncofdm_swig', [dirname(__file__)])
        except ImportError:
            import _ncofdm_swig
            return _ncofdm_swig
        if fp is not None:
            try:
                _mod = imp.load_module('_ncofdm_swig', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _ncofdm_swig = swig_import_helper()
    del swig_import_helper
else:
    import _ncofdm_swig
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr



def high_res_timer_now():
  """high_res_timer_now() -> gr::high_res_timer_type"""
  return _ncofdm_swig.high_res_timer_now()

def high_res_timer_now_perfmon():
  """high_res_timer_now_perfmon() -> gr::high_res_timer_type"""
  return _ncofdm_swig.high_res_timer_now_perfmon()

def high_res_timer_tps():
  """high_res_timer_tps() -> gr::high_res_timer_type"""
  return _ncofdm_swig.high_res_timer_tps()

def high_res_timer_epoch():
  """high_res_timer_epoch() -> gr::high_res_timer_type"""
  return _ncofdm_swig.high_res_timer_epoch()
class ncofdm_carrier_allocator(object):
    """Proxy of C++ gr::ncofdm::ncofdm_carrier_allocator class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def len_tag_key(self):
        """len_tag_key(ncofdm_carrier_allocator self) -> std::string"""
        return _ncofdm_swig.ncofdm_carrier_allocator_len_tag_key(self)

    def fft_len(self):
        """fft_len(ncofdm_carrier_allocator self) -> int const"""
        return _ncofdm_swig.ncofdm_carrier_allocator_fft_len(self)

    def occupied_carriers(self):
        """occupied_carriers(ncofdm_carrier_allocator self) -> std::vector< std::vector< int,std::allocator< int > >,std::allocator< std::vector< int,std::allocator< int > > > >"""
        return _ncofdm_swig.ncofdm_carrier_allocator_occupied_carriers(self)

    def make(*args, **kwargs):
        """
        make(int fft_len, std::vector< std::vector< int,std::allocator< int > >,std::allocator< std::vector< int,std::allocator< int > > > > const & occupied_carriers, 
            std::vector< std::vector< int,std::allocator< int > >,std::allocator< std::vector< int,std::allocator< int > > > > const & pilot_carriers, 
            gr_vector_vector_complexf pilot_symbols, 
            std::string const & len_tag_key) -> ncofdm_carrier_allocator_sptr
        """
        return _ncofdm_swig.ncofdm_carrier_allocator_make(*args, **kwargs)

    make = staticmethod(make)
    __swig_destroy__ = _ncofdm_swig.delete_ncofdm_carrier_allocator
    __del__ = lambda self : None;
ncofdm_carrier_allocator_swigregister = _ncofdm_swig.ncofdm_carrier_allocator_swigregister
ncofdm_carrier_allocator_swigregister(ncofdm_carrier_allocator)

def ncofdm_carrier_allocator_make(*args, **kwargs):
  """
    ncofdm_carrier_allocator_make(int fft_len, std::vector< std::vector< int,std::allocator< int > >,std::allocator< std::vector< int,std::allocator< int > > > > const & occupied_carriers, 
        std::vector< std::vector< int,std::allocator< int > >,std::allocator< std::vector< int,std::allocator< int > > > > const & pilot_carriers, 
        gr_vector_vector_complexf pilot_symbols, 
        std::string const & len_tag_key) -> ncofdm_carrier_allocator_sptr
    """
  return _ncofdm_swig.ncofdm_carrier_allocator_make(*args, **kwargs)

class ncofdm_carrier_allocator_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::ncofdm::ncofdm_carrier_allocator)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::ncofdm::ncofdm_carrier_allocator)> self) -> ncofdm_carrier_allocator_sptr
        __init__(boost::shared_ptr<(gr::ncofdm::ncofdm_carrier_allocator)> self, ncofdm_carrier_allocator p) -> ncofdm_carrier_allocator_sptr
        """
        this = _ncofdm_swig.new_ncofdm_carrier_allocator_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(ncofdm_carrier_allocator_sptr self) -> ncofdm_carrier_allocator"""
        return _ncofdm_swig.ncofdm_carrier_allocator_sptr___deref__(self)

    __swig_destroy__ = _ncofdm_swig.delete_ncofdm_carrier_allocator_sptr
    __del__ = lambda self : None;
    def len_tag_key(self):
        """len_tag_key(ncofdm_carrier_allocator_sptr self) -> std::string"""
        return _ncofdm_swig.ncofdm_carrier_allocator_sptr_len_tag_key(self)

    def fft_len(self):
        """fft_len(ncofdm_carrier_allocator_sptr self) -> int const"""
        return _ncofdm_swig.ncofdm_carrier_allocator_sptr_fft_len(self)

    def occupied_carriers(self):
        """occupied_carriers(ncofdm_carrier_allocator_sptr self) -> std::vector< std::vector< int,std::allocator< int > >,std::allocator< std::vector< int,std::allocator< int > > > >"""
        return _ncofdm_swig.ncofdm_carrier_allocator_sptr_occupied_carriers(self)

    def make(self, *args, **kwargs):
        """
        make(ncofdm_carrier_allocator_sptr self, int fft_len, std::vector< std::vector< int,std::allocator< int > >,std::allocator< std::vector< int,std::allocator< int > > > > const & occupied_carriers, 
            std::vector< std::vector< int,std::allocator< int > >,std::allocator< std::vector< int,std::allocator< int > > > > const & pilot_carriers, 
            gr_vector_vector_complexf pilot_symbols, 
            std::string const & len_tag_key) -> ncofdm_carrier_allocator_sptr
        """
        return _ncofdm_swig.ncofdm_carrier_allocator_sptr_make(self, *args, **kwargs)

    def history(self):
        """history(ncofdm_carrier_allocator_sptr self) -> unsigned int"""
        return _ncofdm_swig.ncofdm_carrier_allocator_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(ncofdm_carrier_allocator_sptr self, int which, int delay)
        declare_sample_delay(ncofdm_carrier_allocator_sptr self, unsigned int delay)
        """
        return _ncofdm_swig.ncofdm_carrier_allocator_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(ncofdm_carrier_allocator_sptr self, int which) -> unsigned int"""
        return _ncofdm_swig.ncofdm_carrier_allocator_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(ncofdm_carrier_allocator_sptr self) -> int"""
        return _ncofdm_swig.ncofdm_carrier_allocator_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(ncofdm_carrier_allocator_sptr self) -> double"""
        return _ncofdm_swig.ncofdm_carrier_allocator_sptr_relative_rate(self)

    def start(self):
        """start(ncofdm_carrier_allocator_sptr self) -> bool"""
        return _ncofdm_swig.ncofdm_carrier_allocator_sptr_start(self)

    def stop(self):
        """stop(ncofdm_carrier_allocator_sptr self) -> bool"""
        return _ncofdm_swig.ncofdm_carrier_allocator_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(ncofdm_carrier_allocator_sptr self, unsigned int which_input) -> uint64_t"""
        return _ncofdm_swig.ncofdm_carrier_allocator_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(ncofdm_carrier_allocator_sptr self, unsigned int which_output) -> uint64_t"""
        return _ncofdm_swig.ncofdm_carrier_allocator_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(ncofdm_carrier_allocator_sptr self) -> int"""
        return _ncofdm_swig.ncofdm_carrier_allocator_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(ncofdm_carrier_allocator_sptr self, int m)"""
        return _ncofdm_swig.ncofdm_carrier_allocator_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(ncofdm_carrier_allocator_sptr self)"""
        return _ncofdm_swig.ncofdm_carrier_allocator_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(ncofdm_carrier_allocator_sptr self) -> bool"""
        return _ncofdm_swig.ncofdm_carrier_allocator_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(ncofdm_carrier_allocator_sptr self, int m)"""
        return _ncofdm_swig.ncofdm_carrier_allocator_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(ncofdm_carrier_allocator_sptr self) -> int"""
        return _ncofdm_swig.ncofdm_carrier_allocator_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(ncofdm_carrier_allocator_sptr self, int i) -> long"""
        return _ncofdm_swig.ncofdm_carrier_allocator_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(ncofdm_carrier_allocator_sptr self, long max_output_buffer)
        set_max_output_buffer(ncofdm_carrier_allocator_sptr self, int port, long max_output_buffer)
        """
        return _ncofdm_swig.ncofdm_carrier_allocator_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(ncofdm_carrier_allocator_sptr self, int i) -> long"""
        return _ncofdm_swig.ncofdm_carrier_allocator_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(ncofdm_carrier_allocator_sptr self, long min_output_buffer)
        set_min_output_buffer(ncofdm_carrier_allocator_sptr self, int port, long min_output_buffer)
        """
        return _ncofdm_swig.ncofdm_carrier_allocator_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(ncofdm_carrier_allocator_sptr self) -> float"""
        return _ncofdm_swig.ncofdm_carrier_allocator_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(ncofdm_carrier_allocator_sptr self) -> float"""
        return _ncofdm_swig.ncofdm_carrier_allocator_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(ncofdm_carrier_allocator_sptr self) -> float"""
        return _ncofdm_swig.ncofdm_carrier_allocator_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(ncofdm_carrier_allocator_sptr self) -> float"""
        return _ncofdm_swig.ncofdm_carrier_allocator_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(ncofdm_carrier_allocator_sptr self) -> float"""
        return _ncofdm_swig.ncofdm_carrier_allocator_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(ncofdm_carrier_allocator_sptr self) -> float"""
        return _ncofdm_swig.ncofdm_carrier_allocator_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(ncofdm_carrier_allocator_sptr self, int which) -> float
        pc_input_buffers_full(ncofdm_carrier_allocator_sptr self) -> pmt_vector_float
        """
        return _ncofdm_swig.ncofdm_carrier_allocator_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(ncofdm_carrier_allocator_sptr self, int which) -> float
        pc_input_buffers_full_avg(ncofdm_carrier_allocator_sptr self) -> pmt_vector_float
        """
        return _ncofdm_swig.ncofdm_carrier_allocator_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(ncofdm_carrier_allocator_sptr self, int which) -> float
        pc_input_buffers_full_var(ncofdm_carrier_allocator_sptr self) -> pmt_vector_float
        """
        return _ncofdm_swig.ncofdm_carrier_allocator_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(ncofdm_carrier_allocator_sptr self, int which) -> float
        pc_output_buffers_full(ncofdm_carrier_allocator_sptr self) -> pmt_vector_float
        """
        return _ncofdm_swig.ncofdm_carrier_allocator_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(ncofdm_carrier_allocator_sptr self, int which) -> float
        pc_output_buffers_full_avg(ncofdm_carrier_allocator_sptr self) -> pmt_vector_float
        """
        return _ncofdm_swig.ncofdm_carrier_allocator_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(ncofdm_carrier_allocator_sptr self, int which) -> float
        pc_output_buffers_full_var(ncofdm_carrier_allocator_sptr self) -> pmt_vector_float
        """
        return _ncofdm_swig.ncofdm_carrier_allocator_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(ncofdm_carrier_allocator_sptr self) -> float"""
        return _ncofdm_swig.ncofdm_carrier_allocator_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(ncofdm_carrier_allocator_sptr self) -> float"""
        return _ncofdm_swig.ncofdm_carrier_allocator_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(ncofdm_carrier_allocator_sptr self) -> float"""
        return _ncofdm_swig.ncofdm_carrier_allocator_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(ncofdm_carrier_allocator_sptr self) -> float"""
        return _ncofdm_swig.ncofdm_carrier_allocator_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self):
        """pc_throughput_avg(ncofdm_carrier_allocator_sptr self) -> float"""
        return _ncofdm_swig.ncofdm_carrier_allocator_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(ncofdm_carrier_allocator_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _ncofdm_swig.ncofdm_carrier_allocator_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(ncofdm_carrier_allocator_sptr self)"""
        return _ncofdm_swig.ncofdm_carrier_allocator_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(ncofdm_carrier_allocator_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _ncofdm_swig.ncofdm_carrier_allocator_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(ncofdm_carrier_allocator_sptr self) -> int"""
        return _ncofdm_swig.ncofdm_carrier_allocator_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(ncofdm_carrier_allocator_sptr self) -> int"""
        return _ncofdm_swig.ncofdm_carrier_allocator_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(ncofdm_carrier_allocator_sptr self, int priority) -> int"""
        return _ncofdm_swig.ncofdm_carrier_allocator_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(ncofdm_carrier_allocator_sptr self) -> std::string"""
        return _ncofdm_swig.ncofdm_carrier_allocator_sptr_name(self)

    def symbol_name(self):
        """symbol_name(ncofdm_carrier_allocator_sptr self) -> std::string"""
        return _ncofdm_swig.ncofdm_carrier_allocator_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(ncofdm_carrier_allocator_sptr self) -> io_signature_sptr"""
        return _ncofdm_swig.ncofdm_carrier_allocator_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(ncofdm_carrier_allocator_sptr self) -> io_signature_sptr"""
        return _ncofdm_swig.ncofdm_carrier_allocator_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(ncofdm_carrier_allocator_sptr self) -> long"""
        return _ncofdm_swig.ncofdm_carrier_allocator_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(ncofdm_carrier_allocator_sptr self) -> basic_block_sptr"""
        return _ncofdm_swig.ncofdm_carrier_allocator_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(ncofdm_carrier_allocator_sptr self, int ninputs, int noutputs) -> bool"""
        return _ncofdm_swig.ncofdm_carrier_allocator_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(ncofdm_carrier_allocator_sptr self) -> std::string"""
        return _ncofdm_swig.ncofdm_carrier_allocator_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(ncofdm_carrier_allocator_sptr self, std::string name)"""
        return _ncofdm_swig.ncofdm_carrier_allocator_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(ncofdm_carrier_allocator_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _ncofdm_swig.ncofdm_carrier_allocator_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(ncofdm_carrier_allocator_sptr self) -> swig_int_ptr"""
        return _ncofdm_swig.ncofdm_carrier_allocator_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(ncofdm_carrier_allocator_sptr self) -> swig_int_ptr"""
        return _ncofdm_swig.ncofdm_carrier_allocator_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(ncofdm_carrier_allocator_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _ncofdm_swig.ncofdm_carrier_allocator_sptr_message_subscribers(self, *args, **kwargs)

ncofdm_carrier_allocator_sptr_swigregister = _ncofdm_swig.ncofdm_carrier_allocator_sptr_swigregister
ncofdm_carrier_allocator_sptr_swigregister(ncofdm_carrier_allocator_sptr)

ncofdm_carrier_allocator_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
ncofdm_carrier_allocator = ncofdm_carrier_allocator.make;

class add_cp_sync(object):
    """Proxy of C++ gr::ncofdm::add_cp_sync class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(*args, **kwargs):
        """
        make(int fft_len, int cp_len, float sp_ratio_db, int data_len, int shseq_len, int shseq_rep, 
            pmt_vector_cfloat shseq, int lgseq_len, pmt_vector_cfloat lgseq, std::string const & len_tag_key) -> add_cp_sync_sptr
        """
        return _ncofdm_swig.add_cp_sync_make(*args, **kwargs)

    make = staticmethod(make)
    __swig_destroy__ = _ncofdm_swig.delete_add_cp_sync
    __del__ = lambda self : None;
add_cp_sync_swigregister = _ncofdm_swig.add_cp_sync_swigregister
add_cp_sync_swigregister(add_cp_sync)

def add_cp_sync_make(*args, **kwargs):
  """
    add_cp_sync_make(int fft_len, int cp_len, float sp_ratio_db, int data_len, int shseq_len, int shseq_rep, 
        pmt_vector_cfloat shseq, int lgseq_len, pmt_vector_cfloat lgseq, std::string const & len_tag_key) -> add_cp_sync_sptr
    """
  return _ncofdm_swig.add_cp_sync_make(*args, **kwargs)

class add_cp_sync_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::ncofdm::add_cp_sync)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::ncofdm::add_cp_sync)> self) -> add_cp_sync_sptr
        __init__(boost::shared_ptr<(gr::ncofdm::add_cp_sync)> self, add_cp_sync p) -> add_cp_sync_sptr
        """
        this = _ncofdm_swig.new_add_cp_sync_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(add_cp_sync_sptr self) -> add_cp_sync"""
        return _ncofdm_swig.add_cp_sync_sptr___deref__(self)

    __swig_destroy__ = _ncofdm_swig.delete_add_cp_sync_sptr
    __del__ = lambda self : None;
    def make(self, *args, **kwargs):
        """
        make(add_cp_sync_sptr self, int fft_len, int cp_len, float sp_ratio_db, int data_len, int shseq_len, int shseq_rep, 
            pmt_vector_cfloat shseq, int lgseq_len, pmt_vector_cfloat lgseq, std::string const & len_tag_key) -> add_cp_sync_sptr
        """
        return _ncofdm_swig.add_cp_sync_sptr_make(self, *args, **kwargs)

    def history(self):
        """history(add_cp_sync_sptr self) -> unsigned int"""
        return _ncofdm_swig.add_cp_sync_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(add_cp_sync_sptr self, int which, int delay)
        declare_sample_delay(add_cp_sync_sptr self, unsigned int delay)
        """
        return _ncofdm_swig.add_cp_sync_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(add_cp_sync_sptr self, int which) -> unsigned int"""
        return _ncofdm_swig.add_cp_sync_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(add_cp_sync_sptr self) -> int"""
        return _ncofdm_swig.add_cp_sync_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(add_cp_sync_sptr self) -> double"""
        return _ncofdm_swig.add_cp_sync_sptr_relative_rate(self)

    def start(self):
        """start(add_cp_sync_sptr self) -> bool"""
        return _ncofdm_swig.add_cp_sync_sptr_start(self)

    def stop(self):
        """stop(add_cp_sync_sptr self) -> bool"""
        return _ncofdm_swig.add_cp_sync_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(add_cp_sync_sptr self, unsigned int which_input) -> uint64_t"""
        return _ncofdm_swig.add_cp_sync_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(add_cp_sync_sptr self, unsigned int which_output) -> uint64_t"""
        return _ncofdm_swig.add_cp_sync_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(add_cp_sync_sptr self) -> int"""
        return _ncofdm_swig.add_cp_sync_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(add_cp_sync_sptr self, int m)"""
        return _ncofdm_swig.add_cp_sync_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(add_cp_sync_sptr self)"""
        return _ncofdm_swig.add_cp_sync_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(add_cp_sync_sptr self) -> bool"""
        return _ncofdm_swig.add_cp_sync_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(add_cp_sync_sptr self, int m)"""
        return _ncofdm_swig.add_cp_sync_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(add_cp_sync_sptr self) -> int"""
        return _ncofdm_swig.add_cp_sync_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(add_cp_sync_sptr self, int i) -> long"""
        return _ncofdm_swig.add_cp_sync_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(add_cp_sync_sptr self, long max_output_buffer)
        set_max_output_buffer(add_cp_sync_sptr self, int port, long max_output_buffer)
        """
        return _ncofdm_swig.add_cp_sync_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(add_cp_sync_sptr self, int i) -> long"""
        return _ncofdm_swig.add_cp_sync_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(add_cp_sync_sptr self, long min_output_buffer)
        set_min_output_buffer(add_cp_sync_sptr self, int port, long min_output_buffer)
        """
        return _ncofdm_swig.add_cp_sync_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(add_cp_sync_sptr self) -> float"""
        return _ncofdm_swig.add_cp_sync_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(add_cp_sync_sptr self) -> float"""
        return _ncofdm_swig.add_cp_sync_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(add_cp_sync_sptr self) -> float"""
        return _ncofdm_swig.add_cp_sync_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(add_cp_sync_sptr self) -> float"""
        return _ncofdm_swig.add_cp_sync_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(add_cp_sync_sptr self) -> float"""
        return _ncofdm_swig.add_cp_sync_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(add_cp_sync_sptr self) -> float"""
        return _ncofdm_swig.add_cp_sync_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(add_cp_sync_sptr self, int which) -> float
        pc_input_buffers_full(add_cp_sync_sptr self) -> pmt_vector_float
        """
        return _ncofdm_swig.add_cp_sync_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(add_cp_sync_sptr self, int which) -> float
        pc_input_buffers_full_avg(add_cp_sync_sptr self) -> pmt_vector_float
        """
        return _ncofdm_swig.add_cp_sync_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(add_cp_sync_sptr self, int which) -> float
        pc_input_buffers_full_var(add_cp_sync_sptr self) -> pmt_vector_float
        """
        return _ncofdm_swig.add_cp_sync_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(add_cp_sync_sptr self, int which) -> float
        pc_output_buffers_full(add_cp_sync_sptr self) -> pmt_vector_float
        """
        return _ncofdm_swig.add_cp_sync_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(add_cp_sync_sptr self, int which) -> float
        pc_output_buffers_full_avg(add_cp_sync_sptr self) -> pmt_vector_float
        """
        return _ncofdm_swig.add_cp_sync_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(add_cp_sync_sptr self, int which) -> float
        pc_output_buffers_full_var(add_cp_sync_sptr self) -> pmt_vector_float
        """
        return _ncofdm_swig.add_cp_sync_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(add_cp_sync_sptr self) -> float"""
        return _ncofdm_swig.add_cp_sync_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(add_cp_sync_sptr self) -> float"""
        return _ncofdm_swig.add_cp_sync_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(add_cp_sync_sptr self) -> float"""
        return _ncofdm_swig.add_cp_sync_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(add_cp_sync_sptr self) -> float"""
        return _ncofdm_swig.add_cp_sync_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self):
        """pc_throughput_avg(add_cp_sync_sptr self) -> float"""
        return _ncofdm_swig.add_cp_sync_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(add_cp_sync_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _ncofdm_swig.add_cp_sync_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(add_cp_sync_sptr self)"""
        return _ncofdm_swig.add_cp_sync_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(add_cp_sync_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _ncofdm_swig.add_cp_sync_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(add_cp_sync_sptr self) -> int"""
        return _ncofdm_swig.add_cp_sync_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(add_cp_sync_sptr self) -> int"""
        return _ncofdm_swig.add_cp_sync_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(add_cp_sync_sptr self, int priority) -> int"""
        return _ncofdm_swig.add_cp_sync_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(add_cp_sync_sptr self) -> std::string"""
        return _ncofdm_swig.add_cp_sync_sptr_name(self)

    def symbol_name(self):
        """symbol_name(add_cp_sync_sptr self) -> std::string"""
        return _ncofdm_swig.add_cp_sync_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(add_cp_sync_sptr self) -> io_signature_sptr"""
        return _ncofdm_swig.add_cp_sync_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(add_cp_sync_sptr self) -> io_signature_sptr"""
        return _ncofdm_swig.add_cp_sync_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(add_cp_sync_sptr self) -> long"""
        return _ncofdm_swig.add_cp_sync_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(add_cp_sync_sptr self) -> basic_block_sptr"""
        return _ncofdm_swig.add_cp_sync_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(add_cp_sync_sptr self, int ninputs, int noutputs) -> bool"""
        return _ncofdm_swig.add_cp_sync_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(add_cp_sync_sptr self) -> std::string"""
        return _ncofdm_swig.add_cp_sync_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(add_cp_sync_sptr self, std::string name)"""
        return _ncofdm_swig.add_cp_sync_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(add_cp_sync_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _ncofdm_swig.add_cp_sync_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(add_cp_sync_sptr self) -> swig_int_ptr"""
        return _ncofdm_swig.add_cp_sync_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(add_cp_sync_sptr self) -> swig_int_ptr"""
        return _ncofdm_swig.add_cp_sync_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(add_cp_sync_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _ncofdm_swig.add_cp_sync_sptr_message_subscribers(self, *args, **kwargs)

add_cp_sync_sptr_swigregister = _ncofdm_swig.add_cp_sync_sptr_swigregister
add_cp_sync_sptr_swigregister(add_cp_sync_sptr)

add_cp_sync_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
add_cp_sync = add_cp_sync.make;

class ShortPNcorr(object):
    """Proxy of C++ gr::ncofdm::ShortPNcorr class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(*args, **kwargs):
        """make(int fft_len, int cp_len, int ShSeqRep, int ShSeqLen, pmt_vector_cfloat ShSeq) -> ShortPNcorr_sptr"""
        return _ncofdm_swig.ShortPNcorr_make(*args, **kwargs)

    make = staticmethod(make)
    __swig_destroy__ = _ncofdm_swig.delete_ShortPNcorr
    __del__ = lambda self : None;
ShortPNcorr_swigregister = _ncofdm_swig.ShortPNcorr_swigregister
ShortPNcorr_swigregister(ShortPNcorr)

def ShortPNcorr_make(*args, **kwargs):
  """ShortPNcorr_make(int fft_len, int cp_len, int ShSeqRep, int ShSeqLen, pmt_vector_cfloat ShSeq) -> ShortPNcorr_sptr"""
  return _ncofdm_swig.ShortPNcorr_make(*args, **kwargs)

class ShortPNcorr_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::ncofdm::ShortPNcorr)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::ncofdm::ShortPNcorr)> self) -> ShortPNcorr_sptr
        __init__(boost::shared_ptr<(gr::ncofdm::ShortPNcorr)> self, ShortPNcorr p) -> ShortPNcorr_sptr
        """
        this = _ncofdm_swig.new_ShortPNcorr_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(ShortPNcorr_sptr self) -> ShortPNcorr"""
        return _ncofdm_swig.ShortPNcorr_sptr___deref__(self)

    __swig_destroy__ = _ncofdm_swig.delete_ShortPNcorr_sptr
    __del__ = lambda self : None;
    def make(self, *args, **kwargs):
        """make(ShortPNcorr_sptr self, int fft_len, int cp_len, int ShSeqRep, int ShSeqLen, pmt_vector_cfloat ShSeq) -> ShortPNcorr_sptr"""
        return _ncofdm_swig.ShortPNcorr_sptr_make(self, *args, **kwargs)

    def history(self):
        """history(ShortPNcorr_sptr self) -> unsigned int"""
        return _ncofdm_swig.ShortPNcorr_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(ShortPNcorr_sptr self, int which, int delay)
        declare_sample_delay(ShortPNcorr_sptr self, unsigned int delay)
        """
        return _ncofdm_swig.ShortPNcorr_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(ShortPNcorr_sptr self, int which) -> unsigned int"""
        return _ncofdm_swig.ShortPNcorr_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(ShortPNcorr_sptr self) -> int"""
        return _ncofdm_swig.ShortPNcorr_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(ShortPNcorr_sptr self) -> double"""
        return _ncofdm_swig.ShortPNcorr_sptr_relative_rate(self)

    def start(self):
        """start(ShortPNcorr_sptr self) -> bool"""
        return _ncofdm_swig.ShortPNcorr_sptr_start(self)

    def stop(self):
        """stop(ShortPNcorr_sptr self) -> bool"""
        return _ncofdm_swig.ShortPNcorr_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(ShortPNcorr_sptr self, unsigned int which_input) -> uint64_t"""
        return _ncofdm_swig.ShortPNcorr_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(ShortPNcorr_sptr self, unsigned int which_output) -> uint64_t"""
        return _ncofdm_swig.ShortPNcorr_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(ShortPNcorr_sptr self) -> int"""
        return _ncofdm_swig.ShortPNcorr_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(ShortPNcorr_sptr self, int m)"""
        return _ncofdm_swig.ShortPNcorr_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(ShortPNcorr_sptr self)"""
        return _ncofdm_swig.ShortPNcorr_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(ShortPNcorr_sptr self) -> bool"""
        return _ncofdm_swig.ShortPNcorr_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(ShortPNcorr_sptr self, int m)"""
        return _ncofdm_swig.ShortPNcorr_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(ShortPNcorr_sptr self) -> int"""
        return _ncofdm_swig.ShortPNcorr_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(ShortPNcorr_sptr self, int i) -> long"""
        return _ncofdm_swig.ShortPNcorr_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(ShortPNcorr_sptr self, long max_output_buffer)
        set_max_output_buffer(ShortPNcorr_sptr self, int port, long max_output_buffer)
        """
        return _ncofdm_swig.ShortPNcorr_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(ShortPNcorr_sptr self, int i) -> long"""
        return _ncofdm_swig.ShortPNcorr_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(ShortPNcorr_sptr self, long min_output_buffer)
        set_min_output_buffer(ShortPNcorr_sptr self, int port, long min_output_buffer)
        """
        return _ncofdm_swig.ShortPNcorr_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(ShortPNcorr_sptr self) -> float"""
        return _ncofdm_swig.ShortPNcorr_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(ShortPNcorr_sptr self) -> float"""
        return _ncofdm_swig.ShortPNcorr_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(ShortPNcorr_sptr self) -> float"""
        return _ncofdm_swig.ShortPNcorr_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(ShortPNcorr_sptr self) -> float"""
        return _ncofdm_swig.ShortPNcorr_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(ShortPNcorr_sptr self) -> float"""
        return _ncofdm_swig.ShortPNcorr_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(ShortPNcorr_sptr self) -> float"""
        return _ncofdm_swig.ShortPNcorr_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(ShortPNcorr_sptr self, int which) -> float
        pc_input_buffers_full(ShortPNcorr_sptr self) -> pmt_vector_float
        """
        return _ncofdm_swig.ShortPNcorr_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(ShortPNcorr_sptr self, int which) -> float
        pc_input_buffers_full_avg(ShortPNcorr_sptr self) -> pmt_vector_float
        """
        return _ncofdm_swig.ShortPNcorr_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(ShortPNcorr_sptr self, int which) -> float
        pc_input_buffers_full_var(ShortPNcorr_sptr self) -> pmt_vector_float
        """
        return _ncofdm_swig.ShortPNcorr_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(ShortPNcorr_sptr self, int which) -> float
        pc_output_buffers_full(ShortPNcorr_sptr self) -> pmt_vector_float
        """
        return _ncofdm_swig.ShortPNcorr_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(ShortPNcorr_sptr self, int which) -> float
        pc_output_buffers_full_avg(ShortPNcorr_sptr self) -> pmt_vector_float
        """
        return _ncofdm_swig.ShortPNcorr_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(ShortPNcorr_sptr self, int which) -> float
        pc_output_buffers_full_var(ShortPNcorr_sptr self) -> pmt_vector_float
        """
        return _ncofdm_swig.ShortPNcorr_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(ShortPNcorr_sptr self) -> float"""
        return _ncofdm_swig.ShortPNcorr_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(ShortPNcorr_sptr self) -> float"""
        return _ncofdm_swig.ShortPNcorr_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(ShortPNcorr_sptr self) -> float"""
        return _ncofdm_swig.ShortPNcorr_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(ShortPNcorr_sptr self) -> float"""
        return _ncofdm_swig.ShortPNcorr_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self):
        """pc_throughput_avg(ShortPNcorr_sptr self) -> float"""
        return _ncofdm_swig.ShortPNcorr_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(ShortPNcorr_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _ncofdm_swig.ShortPNcorr_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(ShortPNcorr_sptr self)"""
        return _ncofdm_swig.ShortPNcorr_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(ShortPNcorr_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _ncofdm_swig.ShortPNcorr_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(ShortPNcorr_sptr self) -> int"""
        return _ncofdm_swig.ShortPNcorr_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(ShortPNcorr_sptr self) -> int"""
        return _ncofdm_swig.ShortPNcorr_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(ShortPNcorr_sptr self, int priority) -> int"""
        return _ncofdm_swig.ShortPNcorr_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(ShortPNcorr_sptr self) -> std::string"""
        return _ncofdm_swig.ShortPNcorr_sptr_name(self)

    def symbol_name(self):
        """symbol_name(ShortPNcorr_sptr self) -> std::string"""
        return _ncofdm_swig.ShortPNcorr_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(ShortPNcorr_sptr self) -> io_signature_sptr"""
        return _ncofdm_swig.ShortPNcorr_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(ShortPNcorr_sptr self) -> io_signature_sptr"""
        return _ncofdm_swig.ShortPNcorr_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(ShortPNcorr_sptr self) -> long"""
        return _ncofdm_swig.ShortPNcorr_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(ShortPNcorr_sptr self) -> basic_block_sptr"""
        return _ncofdm_swig.ShortPNcorr_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(ShortPNcorr_sptr self, int ninputs, int noutputs) -> bool"""
        return _ncofdm_swig.ShortPNcorr_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(ShortPNcorr_sptr self) -> std::string"""
        return _ncofdm_swig.ShortPNcorr_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(ShortPNcorr_sptr self, std::string name)"""
        return _ncofdm_swig.ShortPNcorr_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(ShortPNcorr_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _ncofdm_swig.ShortPNcorr_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(ShortPNcorr_sptr self) -> swig_int_ptr"""
        return _ncofdm_swig.ShortPNcorr_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(ShortPNcorr_sptr self) -> swig_int_ptr"""
        return _ncofdm_swig.ShortPNcorr_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(ShortPNcorr_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _ncofdm_swig.ShortPNcorr_sptr_message_subscribers(self, *args, **kwargs)

ShortPNcorr_sptr_swigregister = _ncofdm_swig.ShortPNcorr_sptr_swigregister
ShortPNcorr_sptr_swigregister(ShortPNcorr_sptr)

ShortPNcorr_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
ShortPNcorr = ShortPNcorr.make;

class stream2fftvector(object):
    """Proxy of C++ gr::ncofdm::stream2fftvector class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(*args, **kwargs):
        """make(int fft_len, int cp_len) -> stream2fftvector_sptr"""
        return _ncofdm_swig.stream2fftvector_make(*args, **kwargs)

    make = staticmethod(make)
    __swig_destroy__ = _ncofdm_swig.delete_stream2fftvector
    __del__ = lambda self : None;
stream2fftvector_swigregister = _ncofdm_swig.stream2fftvector_swigregister
stream2fftvector_swigregister(stream2fftvector)

def stream2fftvector_make(*args, **kwargs):
  """stream2fftvector_make(int fft_len, int cp_len) -> stream2fftvector_sptr"""
  return _ncofdm_swig.stream2fftvector_make(*args, **kwargs)

class stream2fftvector_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::ncofdm::stream2fftvector)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::ncofdm::stream2fftvector)> self) -> stream2fftvector_sptr
        __init__(boost::shared_ptr<(gr::ncofdm::stream2fftvector)> self, stream2fftvector p) -> stream2fftvector_sptr
        """
        this = _ncofdm_swig.new_stream2fftvector_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(stream2fftvector_sptr self) -> stream2fftvector"""
        return _ncofdm_swig.stream2fftvector_sptr___deref__(self)

    __swig_destroy__ = _ncofdm_swig.delete_stream2fftvector_sptr
    __del__ = lambda self : None;
    def make(self, *args, **kwargs):
        """make(stream2fftvector_sptr self, int fft_len, int cp_len) -> stream2fftvector_sptr"""
        return _ncofdm_swig.stream2fftvector_sptr_make(self, *args, **kwargs)

    def history(self):
        """history(stream2fftvector_sptr self) -> unsigned int"""
        return _ncofdm_swig.stream2fftvector_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(stream2fftvector_sptr self, int which, int delay)
        declare_sample_delay(stream2fftvector_sptr self, unsigned int delay)
        """
        return _ncofdm_swig.stream2fftvector_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(stream2fftvector_sptr self, int which) -> unsigned int"""
        return _ncofdm_swig.stream2fftvector_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(stream2fftvector_sptr self) -> int"""
        return _ncofdm_swig.stream2fftvector_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(stream2fftvector_sptr self) -> double"""
        return _ncofdm_swig.stream2fftvector_sptr_relative_rate(self)

    def start(self):
        """start(stream2fftvector_sptr self) -> bool"""
        return _ncofdm_swig.stream2fftvector_sptr_start(self)

    def stop(self):
        """stop(stream2fftvector_sptr self) -> bool"""
        return _ncofdm_swig.stream2fftvector_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(stream2fftvector_sptr self, unsigned int which_input) -> uint64_t"""
        return _ncofdm_swig.stream2fftvector_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(stream2fftvector_sptr self, unsigned int which_output) -> uint64_t"""
        return _ncofdm_swig.stream2fftvector_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(stream2fftvector_sptr self) -> int"""
        return _ncofdm_swig.stream2fftvector_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(stream2fftvector_sptr self, int m)"""
        return _ncofdm_swig.stream2fftvector_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(stream2fftvector_sptr self)"""
        return _ncofdm_swig.stream2fftvector_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(stream2fftvector_sptr self) -> bool"""
        return _ncofdm_swig.stream2fftvector_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(stream2fftvector_sptr self, int m)"""
        return _ncofdm_swig.stream2fftvector_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(stream2fftvector_sptr self) -> int"""
        return _ncofdm_swig.stream2fftvector_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(stream2fftvector_sptr self, int i) -> long"""
        return _ncofdm_swig.stream2fftvector_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(stream2fftvector_sptr self, long max_output_buffer)
        set_max_output_buffer(stream2fftvector_sptr self, int port, long max_output_buffer)
        """
        return _ncofdm_swig.stream2fftvector_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(stream2fftvector_sptr self, int i) -> long"""
        return _ncofdm_swig.stream2fftvector_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(stream2fftvector_sptr self, long min_output_buffer)
        set_min_output_buffer(stream2fftvector_sptr self, int port, long min_output_buffer)
        """
        return _ncofdm_swig.stream2fftvector_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(stream2fftvector_sptr self) -> float"""
        return _ncofdm_swig.stream2fftvector_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(stream2fftvector_sptr self) -> float"""
        return _ncofdm_swig.stream2fftvector_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(stream2fftvector_sptr self) -> float"""
        return _ncofdm_swig.stream2fftvector_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(stream2fftvector_sptr self) -> float"""
        return _ncofdm_swig.stream2fftvector_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(stream2fftvector_sptr self) -> float"""
        return _ncofdm_swig.stream2fftvector_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(stream2fftvector_sptr self) -> float"""
        return _ncofdm_swig.stream2fftvector_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(stream2fftvector_sptr self, int which) -> float
        pc_input_buffers_full(stream2fftvector_sptr self) -> pmt_vector_float
        """
        return _ncofdm_swig.stream2fftvector_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(stream2fftvector_sptr self, int which) -> float
        pc_input_buffers_full_avg(stream2fftvector_sptr self) -> pmt_vector_float
        """
        return _ncofdm_swig.stream2fftvector_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(stream2fftvector_sptr self, int which) -> float
        pc_input_buffers_full_var(stream2fftvector_sptr self) -> pmt_vector_float
        """
        return _ncofdm_swig.stream2fftvector_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(stream2fftvector_sptr self, int which) -> float
        pc_output_buffers_full(stream2fftvector_sptr self) -> pmt_vector_float
        """
        return _ncofdm_swig.stream2fftvector_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(stream2fftvector_sptr self, int which) -> float
        pc_output_buffers_full_avg(stream2fftvector_sptr self) -> pmt_vector_float
        """
        return _ncofdm_swig.stream2fftvector_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(stream2fftvector_sptr self, int which) -> float
        pc_output_buffers_full_var(stream2fftvector_sptr self) -> pmt_vector_float
        """
        return _ncofdm_swig.stream2fftvector_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(stream2fftvector_sptr self) -> float"""
        return _ncofdm_swig.stream2fftvector_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(stream2fftvector_sptr self) -> float"""
        return _ncofdm_swig.stream2fftvector_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(stream2fftvector_sptr self) -> float"""
        return _ncofdm_swig.stream2fftvector_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(stream2fftvector_sptr self) -> float"""
        return _ncofdm_swig.stream2fftvector_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self):
        """pc_throughput_avg(stream2fftvector_sptr self) -> float"""
        return _ncofdm_swig.stream2fftvector_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(stream2fftvector_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _ncofdm_swig.stream2fftvector_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(stream2fftvector_sptr self)"""
        return _ncofdm_swig.stream2fftvector_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(stream2fftvector_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _ncofdm_swig.stream2fftvector_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(stream2fftvector_sptr self) -> int"""
        return _ncofdm_swig.stream2fftvector_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(stream2fftvector_sptr self) -> int"""
        return _ncofdm_swig.stream2fftvector_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(stream2fftvector_sptr self, int priority) -> int"""
        return _ncofdm_swig.stream2fftvector_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(stream2fftvector_sptr self) -> std::string"""
        return _ncofdm_swig.stream2fftvector_sptr_name(self)

    def symbol_name(self):
        """symbol_name(stream2fftvector_sptr self) -> std::string"""
        return _ncofdm_swig.stream2fftvector_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(stream2fftvector_sptr self) -> io_signature_sptr"""
        return _ncofdm_swig.stream2fftvector_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(stream2fftvector_sptr self) -> io_signature_sptr"""
        return _ncofdm_swig.stream2fftvector_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(stream2fftvector_sptr self) -> long"""
        return _ncofdm_swig.stream2fftvector_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(stream2fftvector_sptr self) -> basic_block_sptr"""
        return _ncofdm_swig.stream2fftvector_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(stream2fftvector_sptr self, int ninputs, int noutputs) -> bool"""
        return _ncofdm_swig.stream2fftvector_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(stream2fftvector_sptr self) -> std::string"""
        return _ncofdm_swig.stream2fftvector_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(stream2fftvector_sptr self, std::string name)"""
        return _ncofdm_swig.stream2fftvector_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(stream2fftvector_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _ncofdm_swig.stream2fftvector_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(stream2fftvector_sptr self) -> swig_int_ptr"""
        return _ncofdm_swig.stream2fftvector_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(stream2fftvector_sptr self) -> swig_int_ptr"""
        return _ncofdm_swig.stream2fftvector_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(stream2fftvector_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _ncofdm_swig.stream2fftvector_sptr_message_subscribers(self, *args, **kwargs)

stream2fftvector_sptr_swigregister = _ncofdm_swig.stream2fftvector_sptr_swigregister
stream2fftvector_sptr_swigregister(stream2fftvector_sptr)

stream2fftvector_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
stream2fftvector = stream2fftvector.make;

class LongPNcorr(object):
    """Proxy of C++ gr::ncofdm::LongPNcorr class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(*args, **kwargs):
        """make(int fft_len, int cp_len, int LgSeqLen, pmt_vector_cfloat LgSeq, float LgThres) -> LongPNcorr_sptr"""
        return _ncofdm_swig.LongPNcorr_make(*args, **kwargs)

    make = staticmethod(make)
    __swig_destroy__ = _ncofdm_swig.delete_LongPNcorr
    __del__ = lambda self : None;
LongPNcorr_swigregister = _ncofdm_swig.LongPNcorr_swigregister
LongPNcorr_swigregister(LongPNcorr)

def LongPNcorr_make(*args, **kwargs):
  """LongPNcorr_make(int fft_len, int cp_len, int LgSeqLen, pmt_vector_cfloat LgSeq, float LgThres) -> LongPNcorr_sptr"""
  return _ncofdm_swig.LongPNcorr_make(*args, **kwargs)

class LongPNcorr_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::ncofdm::LongPNcorr)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::ncofdm::LongPNcorr)> self) -> LongPNcorr_sptr
        __init__(boost::shared_ptr<(gr::ncofdm::LongPNcorr)> self, LongPNcorr p) -> LongPNcorr_sptr
        """
        this = _ncofdm_swig.new_LongPNcorr_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(LongPNcorr_sptr self) -> LongPNcorr"""
        return _ncofdm_swig.LongPNcorr_sptr___deref__(self)

    __swig_destroy__ = _ncofdm_swig.delete_LongPNcorr_sptr
    __del__ = lambda self : None;
    def make(self, *args, **kwargs):
        """make(LongPNcorr_sptr self, int fft_len, int cp_len, int LgSeqLen, pmt_vector_cfloat LgSeq, float LgThres) -> LongPNcorr_sptr"""
        return _ncofdm_swig.LongPNcorr_sptr_make(self, *args, **kwargs)

    def history(self):
        """history(LongPNcorr_sptr self) -> unsigned int"""
        return _ncofdm_swig.LongPNcorr_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(LongPNcorr_sptr self, int which, int delay)
        declare_sample_delay(LongPNcorr_sptr self, unsigned int delay)
        """
        return _ncofdm_swig.LongPNcorr_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(LongPNcorr_sptr self, int which) -> unsigned int"""
        return _ncofdm_swig.LongPNcorr_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(LongPNcorr_sptr self) -> int"""
        return _ncofdm_swig.LongPNcorr_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(LongPNcorr_sptr self) -> double"""
        return _ncofdm_swig.LongPNcorr_sptr_relative_rate(self)

    def start(self):
        """start(LongPNcorr_sptr self) -> bool"""
        return _ncofdm_swig.LongPNcorr_sptr_start(self)

    def stop(self):
        """stop(LongPNcorr_sptr self) -> bool"""
        return _ncofdm_swig.LongPNcorr_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(LongPNcorr_sptr self, unsigned int which_input) -> uint64_t"""
        return _ncofdm_swig.LongPNcorr_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(LongPNcorr_sptr self, unsigned int which_output) -> uint64_t"""
        return _ncofdm_swig.LongPNcorr_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(LongPNcorr_sptr self) -> int"""
        return _ncofdm_swig.LongPNcorr_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(LongPNcorr_sptr self, int m)"""
        return _ncofdm_swig.LongPNcorr_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(LongPNcorr_sptr self)"""
        return _ncofdm_swig.LongPNcorr_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(LongPNcorr_sptr self) -> bool"""
        return _ncofdm_swig.LongPNcorr_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(LongPNcorr_sptr self, int m)"""
        return _ncofdm_swig.LongPNcorr_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(LongPNcorr_sptr self) -> int"""
        return _ncofdm_swig.LongPNcorr_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(LongPNcorr_sptr self, int i) -> long"""
        return _ncofdm_swig.LongPNcorr_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(LongPNcorr_sptr self, long max_output_buffer)
        set_max_output_buffer(LongPNcorr_sptr self, int port, long max_output_buffer)
        """
        return _ncofdm_swig.LongPNcorr_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(LongPNcorr_sptr self, int i) -> long"""
        return _ncofdm_swig.LongPNcorr_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(LongPNcorr_sptr self, long min_output_buffer)
        set_min_output_buffer(LongPNcorr_sptr self, int port, long min_output_buffer)
        """
        return _ncofdm_swig.LongPNcorr_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(LongPNcorr_sptr self) -> float"""
        return _ncofdm_swig.LongPNcorr_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(LongPNcorr_sptr self) -> float"""
        return _ncofdm_swig.LongPNcorr_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(LongPNcorr_sptr self) -> float"""
        return _ncofdm_swig.LongPNcorr_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(LongPNcorr_sptr self) -> float"""
        return _ncofdm_swig.LongPNcorr_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(LongPNcorr_sptr self) -> float"""
        return _ncofdm_swig.LongPNcorr_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(LongPNcorr_sptr self) -> float"""
        return _ncofdm_swig.LongPNcorr_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(LongPNcorr_sptr self, int which) -> float
        pc_input_buffers_full(LongPNcorr_sptr self) -> pmt_vector_float
        """
        return _ncofdm_swig.LongPNcorr_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(LongPNcorr_sptr self, int which) -> float
        pc_input_buffers_full_avg(LongPNcorr_sptr self) -> pmt_vector_float
        """
        return _ncofdm_swig.LongPNcorr_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(LongPNcorr_sptr self, int which) -> float
        pc_input_buffers_full_var(LongPNcorr_sptr self) -> pmt_vector_float
        """
        return _ncofdm_swig.LongPNcorr_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(LongPNcorr_sptr self, int which) -> float
        pc_output_buffers_full(LongPNcorr_sptr self) -> pmt_vector_float
        """
        return _ncofdm_swig.LongPNcorr_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(LongPNcorr_sptr self, int which) -> float
        pc_output_buffers_full_avg(LongPNcorr_sptr self) -> pmt_vector_float
        """
        return _ncofdm_swig.LongPNcorr_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(LongPNcorr_sptr self, int which) -> float
        pc_output_buffers_full_var(LongPNcorr_sptr self) -> pmt_vector_float
        """
        return _ncofdm_swig.LongPNcorr_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(LongPNcorr_sptr self) -> float"""
        return _ncofdm_swig.LongPNcorr_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(LongPNcorr_sptr self) -> float"""
        return _ncofdm_swig.LongPNcorr_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(LongPNcorr_sptr self) -> float"""
        return _ncofdm_swig.LongPNcorr_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(LongPNcorr_sptr self) -> float"""
        return _ncofdm_swig.LongPNcorr_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self):
        """pc_throughput_avg(LongPNcorr_sptr self) -> float"""
        return _ncofdm_swig.LongPNcorr_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(LongPNcorr_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _ncofdm_swig.LongPNcorr_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(LongPNcorr_sptr self)"""
        return _ncofdm_swig.LongPNcorr_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(LongPNcorr_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _ncofdm_swig.LongPNcorr_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(LongPNcorr_sptr self) -> int"""
        return _ncofdm_swig.LongPNcorr_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(LongPNcorr_sptr self) -> int"""
        return _ncofdm_swig.LongPNcorr_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(LongPNcorr_sptr self, int priority) -> int"""
        return _ncofdm_swig.LongPNcorr_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(LongPNcorr_sptr self) -> std::string"""
        return _ncofdm_swig.LongPNcorr_sptr_name(self)

    def symbol_name(self):
        """symbol_name(LongPNcorr_sptr self) -> std::string"""
        return _ncofdm_swig.LongPNcorr_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(LongPNcorr_sptr self) -> io_signature_sptr"""
        return _ncofdm_swig.LongPNcorr_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(LongPNcorr_sptr self) -> io_signature_sptr"""
        return _ncofdm_swig.LongPNcorr_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(LongPNcorr_sptr self) -> long"""
        return _ncofdm_swig.LongPNcorr_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(LongPNcorr_sptr self) -> basic_block_sptr"""
        return _ncofdm_swig.LongPNcorr_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(LongPNcorr_sptr self, int ninputs, int noutputs) -> bool"""
        return _ncofdm_swig.LongPNcorr_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(LongPNcorr_sptr self) -> std::string"""
        return _ncofdm_swig.LongPNcorr_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(LongPNcorr_sptr self, std::string name)"""
        return _ncofdm_swig.LongPNcorr_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(LongPNcorr_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _ncofdm_swig.LongPNcorr_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(LongPNcorr_sptr self) -> swig_int_ptr"""
        return _ncofdm_swig.LongPNcorr_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(LongPNcorr_sptr self) -> swig_int_ptr"""
        return _ncofdm_swig.LongPNcorr_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(LongPNcorr_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _ncofdm_swig.LongPNcorr_sptr_message_subscribers(self, *args, **kwargs)

LongPNcorr_sptr_swigregister = _ncofdm_swig.LongPNcorr_sptr_swigregister
LongPNcorr_sptr_swigregister(LongPNcorr_sptr)

LongPNcorr_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
LongPNcorr = LongPNcorr.make;

class FreqOffCalc(object):
    """Proxy of C++ gr::ncofdm::FreqOffCalc class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(*args, **kwargs):
        """make(int fft_len, int cp_len, int ShSeqLen, int ShSeqRep) -> FreqOffCalc_sptr"""
        return _ncofdm_swig.FreqOffCalc_make(*args, **kwargs)

    make = staticmethod(make)
    __swig_destroy__ = _ncofdm_swig.delete_FreqOffCalc
    __del__ = lambda self : None;
FreqOffCalc_swigregister = _ncofdm_swig.FreqOffCalc_swigregister
FreqOffCalc_swigregister(FreqOffCalc)

def FreqOffCalc_make(*args, **kwargs):
  """FreqOffCalc_make(int fft_len, int cp_len, int ShSeqLen, int ShSeqRep) -> FreqOffCalc_sptr"""
  return _ncofdm_swig.FreqOffCalc_make(*args, **kwargs)

class FreqOffCalc_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::ncofdm::FreqOffCalc)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::ncofdm::FreqOffCalc)> self) -> FreqOffCalc_sptr
        __init__(boost::shared_ptr<(gr::ncofdm::FreqOffCalc)> self, FreqOffCalc p) -> FreqOffCalc_sptr
        """
        this = _ncofdm_swig.new_FreqOffCalc_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(FreqOffCalc_sptr self) -> FreqOffCalc"""
        return _ncofdm_swig.FreqOffCalc_sptr___deref__(self)

    __swig_destroy__ = _ncofdm_swig.delete_FreqOffCalc_sptr
    __del__ = lambda self : None;
    def make(self, *args, **kwargs):
        """make(FreqOffCalc_sptr self, int fft_len, int cp_len, int ShSeqLen, int ShSeqRep) -> FreqOffCalc_sptr"""
        return _ncofdm_swig.FreqOffCalc_sptr_make(self, *args, **kwargs)

    def history(self):
        """history(FreqOffCalc_sptr self) -> unsigned int"""
        return _ncofdm_swig.FreqOffCalc_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(FreqOffCalc_sptr self, int which, int delay)
        declare_sample_delay(FreqOffCalc_sptr self, unsigned int delay)
        """
        return _ncofdm_swig.FreqOffCalc_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(FreqOffCalc_sptr self, int which) -> unsigned int"""
        return _ncofdm_swig.FreqOffCalc_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(FreqOffCalc_sptr self) -> int"""
        return _ncofdm_swig.FreqOffCalc_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(FreqOffCalc_sptr self) -> double"""
        return _ncofdm_swig.FreqOffCalc_sptr_relative_rate(self)

    def start(self):
        """start(FreqOffCalc_sptr self) -> bool"""
        return _ncofdm_swig.FreqOffCalc_sptr_start(self)

    def stop(self):
        """stop(FreqOffCalc_sptr self) -> bool"""
        return _ncofdm_swig.FreqOffCalc_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(FreqOffCalc_sptr self, unsigned int which_input) -> uint64_t"""
        return _ncofdm_swig.FreqOffCalc_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(FreqOffCalc_sptr self, unsigned int which_output) -> uint64_t"""
        return _ncofdm_swig.FreqOffCalc_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(FreqOffCalc_sptr self) -> int"""
        return _ncofdm_swig.FreqOffCalc_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(FreqOffCalc_sptr self, int m)"""
        return _ncofdm_swig.FreqOffCalc_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(FreqOffCalc_sptr self)"""
        return _ncofdm_swig.FreqOffCalc_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(FreqOffCalc_sptr self) -> bool"""
        return _ncofdm_swig.FreqOffCalc_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(FreqOffCalc_sptr self, int m)"""
        return _ncofdm_swig.FreqOffCalc_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(FreqOffCalc_sptr self) -> int"""
        return _ncofdm_swig.FreqOffCalc_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(FreqOffCalc_sptr self, int i) -> long"""
        return _ncofdm_swig.FreqOffCalc_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(FreqOffCalc_sptr self, long max_output_buffer)
        set_max_output_buffer(FreqOffCalc_sptr self, int port, long max_output_buffer)
        """
        return _ncofdm_swig.FreqOffCalc_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(FreqOffCalc_sptr self, int i) -> long"""
        return _ncofdm_swig.FreqOffCalc_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(FreqOffCalc_sptr self, long min_output_buffer)
        set_min_output_buffer(FreqOffCalc_sptr self, int port, long min_output_buffer)
        """
        return _ncofdm_swig.FreqOffCalc_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(FreqOffCalc_sptr self) -> float"""
        return _ncofdm_swig.FreqOffCalc_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(FreqOffCalc_sptr self) -> float"""
        return _ncofdm_swig.FreqOffCalc_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(FreqOffCalc_sptr self) -> float"""
        return _ncofdm_swig.FreqOffCalc_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(FreqOffCalc_sptr self) -> float"""
        return _ncofdm_swig.FreqOffCalc_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(FreqOffCalc_sptr self) -> float"""
        return _ncofdm_swig.FreqOffCalc_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(FreqOffCalc_sptr self) -> float"""
        return _ncofdm_swig.FreqOffCalc_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(FreqOffCalc_sptr self, int which) -> float
        pc_input_buffers_full(FreqOffCalc_sptr self) -> pmt_vector_float
        """
        return _ncofdm_swig.FreqOffCalc_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(FreqOffCalc_sptr self, int which) -> float
        pc_input_buffers_full_avg(FreqOffCalc_sptr self) -> pmt_vector_float
        """
        return _ncofdm_swig.FreqOffCalc_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(FreqOffCalc_sptr self, int which) -> float
        pc_input_buffers_full_var(FreqOffCalc_sptr self) -> pmt_vector_float
        """
        return _ncofdm_swig.FreqOffCalc_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(FreqOffCalc_sptr self, int which) -> float
        pc_output_buffers_full(FreqOffCalc_sptr self) -> pmt_vector_float
        """
        return _ncofdm_swig.FreqOffCalc_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(FreqOffCalc_sptr self, int which) -> float
        pc_output_buffers_full_avg(FreqOffCalc_sptr self) -> pmt_vector_float
        """
        return _ncofdm_swig.FreqOffCalc_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(FreqOffCalc_sptr self, int which) -> float
        pc_output_buffers_full_var(FreqOffCalc_sptr self) -> pmt_vector_float
        """
        return _ncofdm_swig.FreqOffCalc_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(FreqOffCalc_sptr self) -> float"""
        return _ncofdm_swig.FreqOffCalc_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(FreqOffCalc_sptr self) -> float"""
        return _ncofdm_swig.FreqOffCalc_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(FreqOffCalc_sptr self) -> float"""
        return _ncofdm_swig.FreqOffCalc_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(FreqOffCalc_sptr self) -> float"""
        return _ncofdm_swig.FreqOffCalc_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self):
        """pc_throughput_avg(FreqOffCalc_sptr self) -> float"""
        return _ncofdm_swig.FreqOffCalc_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(FreqOffCalc_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _ncofdm_swig.FreqOffCalc_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(FreqOffCalc_sptr self)"""
        return _ncofdm_swig.FreqOffCalc_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(FreqOffCalc_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _ncofdm_swig.FreqOffCalc_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(FreqOffCalc_sptr self) -> int"""
        return _ncofdm_swig.FreqOffCalc_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(FreqOffCalc_sptr self) -> int"""
        return _ncofdm_swig.FreqOffCalc_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(FreqOffCalc_sptr self, int priority) -> int"""
        return _ncofdm_swig.FreqOffCalc_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(FreqOffCalc_sptr self) -> std::string"""
        return _ncofdm_swig.FreqOffCalc_sptr_name(self)

    def symbol_name(self):
        """symbol_name(FreqOffCalc_sptr self) -> std::string"""
        return _ncofdm_swig.FreqOffCalc_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(FreqOffCalc_sptr self) -> io_signature_sptr"""
        return _ncofdm_swig.FreqOffCalc_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(FreqOffCalc_sptr self) -> io_signature_sptr"""
        return _ncofdm_swig.FreqOffCalc_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(FreqOffCalc_sptr self) -> long"""
        return _ncofdm_swig.FreqOffCalc_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(FreqOffCalc_sptr self) -> basic_block_sptr"""
        return _ncofdm_swig.FreqOffCalc_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(FreqOffCalc_sptr self, int ninputs, int noutputs) -> bool"""
        return _ncofdm_swig.FreqOffCalc_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(FreqOffCalc_sptr self) -> std::string"""
        return _ncofdm_swig.FreqOffCalc_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(FreqOffCalc_sptr self, std::string name)"""
        return _ncofdm_swig.FreqOffCalc_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(FreqOffCalc_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _ncofdm_swig.FreqOffCalc_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(FreqOffCalc_sptr self) -> swig_int_ptr"""
        return _ncofdm_swig.FreqOffCalc_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(FreqOffCalc_sptr self) -> swig_int_ptr"""
        return _ncofdm_swig.FreqOffCalc_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(FreqOffCalc_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _ncofdm_swig.FreqOffCalc_sptr_message_subscribers(self, *args, **kwargs)

FreqOffCalc_sptr_swigregister = _ncofdm_swig.FreqOffCalc_sptr_swigregister
FreqOffCalc_sptr_swigregister(FreqOffCalc_sptr)

FreqOffCalc_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
FreqOffCalc = FreqOffCalc.make;

class DyThresAdjust(object):
    """Proxy of C++ gr::ncofdm::DyThresAdjust class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(*args, **kwargs):
        """make(int ShSeqLen, int ShSeqRep, int LgSeqLen, float ShThres, float LgThres, int UpdatePeriod) -> DyThresAdjust_sptr"""
        return _ncofdm_swig.DyThresAdjust_make(*args, **kwargs)

    make = staticmethod(make)
    __swig_destroy__ = _ncofdm_swig.delete_DyThresAdjust
    __del__ = lambda self : None;
DyThresAdjust_swigregister = _ncofdm_swig.DyThresAdjust_swigregister
DyThresAdjust_swigregister(DyThresAdjust)

def DyThresAdjust_make(*args, **kwargs):
  """DyThresAdjust_make(int ShSeqLen, int ShSeqRep, int LgSeqLen, float ShThres, float LgThres, int UpdatePeriod) -> DyThresAdjust_sptr"""
  return _ncofdm_swig.DyThresAdjust_make(*args, **kwargs)

class DyThresAdjust_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::ncofdm::DyThresAdjust)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::ncofdm::DyThresAdjust)> self) -> DyThresAdjust_sptr
        __init__(boost::shared_ptr<(gr::ncofdm::DyThresAdjust)> self, DyThresAdjust p) -> DyThresAdjust_sptr
        """
        this = _ncofdm_swig.new_DyThresAdjust_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(DyThresAdjust_sptr self) -> DyThresAdjust"""
        return _ncofdm_swig.DyThresAdjust_sptr___deref__(self)

    __swig_destroy__ = _ncofdm_swig.delete_DyThresAdjust_sptr
    __del__ = lambda self : None;
    def make(self, *args, **kwargs):
        """make(DyThresAdjust_sptr self, int ShSeqLen, int ShSeqRep, int LgSeqLen, float ShThres, float LgThres, int UpdatePeriod) -> DyThresAdjust_sptr"""
        return _ncofdm_swig.DyThresAdjust_sptr_make(self, *args, **kwargs)

    def history(self):
        """history(DyThresAdjust_sptr self) -> unsigned int"""
        return _ncofdm_swig.DyThresAdjust_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(DyThresAdjust_sptr self, int which, int delay)
        declare_sample_delay(DyThresAdjust_sptr self, unsigned int delay)
        """
        return _ncofdm_swig.DyThresAdjust_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(DyThresAdjust_sptr self, int which) -> unsigned int"""
        return _ncofdm_swig.DyThresAdjust_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(DyThresAdjust_sptr self) -> int"""
        return _ncofdm_swig.DyThresAdjust_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(DyThresAdjust_sptr self) -> double"""
        return _ncofdm_swig.DyThresAdjust_sptr_relative_rate(self)

    def start(self):
        """start(DyThresAdjust_sptr self) -> bool"""
        return _ncofdm_swig.DyThresAdjust_sptr_start(self)

    def stop(self):
        """stop(DyThresAdjust_sptr self) -> bool"""
        return _ncofdm_swig.DyThresAdjust_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(DyThresAdjust_sptr self, unsigned int which_input) -> uint64_t"""
        return _ncofdm_swig.DyThresAdjust_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(DyThresAdjust_sptr self, unsigned int which_output) -> uint64_t"""
        return _ncofdm_swig.DyThresAdjust_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(DyThresAdjust_sptr self) -> int"""
        return _ncofdm_swig.DyThresAdjust_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(DyThresAdjust_sptr self, int m)"""
        return _ncofdm_swig.DyThresAdjust_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(DyThresAdjust_sptr self)"""
        return _ncofdm_swig.DyThresAdjust_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(DyThresAdjust_sptr self) -> bool"""
        return _ncofdm_swig.DyThresAdjust_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(DyThresAdjust_sptr self, int m)"""
        return _ncofdm_swig.DyThresAdjust_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(DyThresAdjust_sptr self) -> int"""
        return _ncofdm_swig.DyThresAdjust_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(DyThresAdjust_sptr self, int i) -> long"""
        return _ncofdm_swig.DyThresAdjust_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(DyThresAdjust_sptr self, long max_output_buffer)
        set_max_output_buffer(DyThresAdjust_sptr self, int port, long max_output_buffer)
        """
        return _ncofdm_swig.DyThresAdjust_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(DyThresAdjust_sptr self, int i) -> long"""
        return _ncofdm_swig.DyThresAdjust_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(DyThresAdjust_sptr self, long min_output_buffer)
        set_min_output_buffer(DyThresAdjust_sptr self, int port, long min_output_buffer)
        """
        return _ncofdm_swig.DyThresAdjust_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(DyThresAdjust_sptr self) -> float"""
        return _ncofdm_swig.DyThresAdjust_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(DyThresAdjust_sptr self) -> float"""
        return _ncofdm_swig.DyThresAdjust_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(DyThresAdjust_sptr self) -> float"""
        return _ncofdm_swig.DyThresAdjust_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(DyThresAdjust_sptr self) -> float"""
        return _ncofdm_swig.DyThresAdjust_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(DyThresAdjust_sptr self) -> float"""
        return _ncofdm_swig.DyThresAdjust_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(DyThresAdjust_sptr self) -> float"""
        return _ncofdm_swig.DyThresAdjust_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(DyThresAdjust_sptr self, int which) -> float
        pc_input_buffers_full(DyThresAdjust_sptr self) -> pmt_vector_float
        """
        return _ncofdm_swig.DyThresAdjust_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(DyThresAdjust_sptr self, int which) -> float
        pc_input_buffers_full_avg(DyThresAdjust_sptr self) -> pmt_vector_float
        """
        return _ncofdm_swig.DyThresAdjust_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(DyThresAdjust_sptr self, int which) -> float
        pc_input_buffers_full_var(DyThresAdjust_sptr self) -> pmt_vector_float
        """
        return _ncofdm_swig.DyThresAdjust_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(DyThresAdjust_sptr self, int which) -> float
        pc_output_buffers_full(DyThresAdjust_sptr self) -> pmt_vector_float
        """
        return _ncofdm_swig.DyThresAdjust_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(DyThresAdjust_sptr self, int which) -> float
        pc_output_buffers_full_avg(DyThresAdjust_sptr self) -> pmt_vector_float
        """
        return _ncofdm_swig.DyThresAdjust_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(DyThresAdjust_sptr self, int which) -> float
        pc_output_buffers_full_var(DyThresAdjust_sptr self) -> pmt_vector_float
        """
        return _ncofdm_swig.DyThresAdjust_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(DyThresAdjust_sptr self) -> float"""
        return _ncofdm_swig.DyThresAdjust_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(DyThresAdjust_sptr self) -> float"""
        return _ncofdm_swig.DyThresAdjust_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(DyThresAdjust_sptr self) -> float"""
        return _ncofdm_swig.DyThresAdjust_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(DyThresAdjust_sptr self) -> float"""
        return _ncofdm_swig.DyThresAdjust_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self):
        """pc_throughput_avg(DyThresAdjust_sptr self) -> float"""
        return _ncofdm_swig.DyThresAdjust_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(DyThresAdjust_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _ncofdm_swig.DyThresAdjust_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(DyThresAdjust_sptr self)"""
        return _ncofdm_swig.DyThresAdjust_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(DyThresAdjust_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _ncofdm_swig.DyThresAdjust_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(DyThresAdjust_sptr self) -> int"""
        return _ncofdm_swig.DyThresAdjust_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(DyThresAdjust_sptr self) -> int"""
        return _ncofdm_swig.DyThresAdjust_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(DyThresAdjust_sptr self, int priority) -> int"""
        return _ncofdm_swig.DyThresAdjust_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(DyThresAdjust_sptr self) -> std::string"""
        return _ncofdm_swig.DyThresAdjust_sptr_name(self)

    def symbol_name(self):
        """symbol_name(DyThresAdjust_sptr self) -> std::string"""
        return _ncofdm_swig.DyThresAdjust_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(DyThresAdjust_sptr self) -> io_signature_sptr"""
        return _ncofdm_swig.DyThresAdjust_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(DyThresAdjust_sptr self) -> io_signature_sptr"""
        return _ncofdm_swig.DyThresAdjust_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(DyThresAdjust_sptr self) -> long"""
        return _ncofdm_swig.DyThresAdjust_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(DyThresAdjust_sptr self) -> basic_block_sptr"""
        return _ncofdm_swig.DyThresAdjust_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(DyThresAdjust_sptr self, int ninputs, int noutputs) -> bool"""
        return _ncofdm_swig.DyThresAdjust_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(DyThresAdjust_sptr self) -> std::string"""
        return _ncofdm_swig.DyThresAdjust_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(DyThresAdjust_sptr self, std::string name)"""
        return _ncofdm_swig.DyThresAdjust_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(DyThresAdjust_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _ncofdm_swig.DyThresAdjust_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(DyThresAdjust_sptr self) -> swig_int_ptr"""
        return _ncofdm_swig.DyThresAdjust_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(DyThresAdjust_sptr self) -> swig_int_ptr"""
        return _ncofdm_swig.DyThresAdjust_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(DyThresAdjust_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _ncofdm_swig.DyThresAdjust_sptr_message_subscribers(self, *args, **kwargs)

DyThresAdjust_sptr_swigregister = _ncofdm_swig.DyThresAdjust_sptr_swigregister
DyThresAdjust_sptr_swigregister(DyThresAdjust_sptr)

DyThresAdjust_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
DyThresAdjust = DyThresAdjust.make;

class ShortPNdetector(object):
    """Proxy of C++ gr::ncofdm::ShortPNdetector class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(*args, **kwargs):
        """make(int fft_len, int cp_len, int ShSeqRep, int ShSeqLen, float threshold) -> ShortPNdetector_sptr"""
        return _ncofdm_swig.ShortPNdetector_make(*args, **kwargs)

    make = staticmethod(make)
    __swig_destroy__ = _ncofdm_swig.delete_ShortPNdetector
    __del__ = lambda self : None;
ShortPNdetector_swigregister = _ncofdm_swig.ShortPNdetector_swigregister
ShortPNdetector_swigregister(ShortPNdetector)

def ShortPNdetector_make(*args, **kwargs):
  """ShortPNdetector_make(int fft_len, int cp_len, int ShSeqRep, int ShSeqLen, float threshold) -> ShortPNdetector_sptr"""
  return _ncofdm_swig.ShortPNdetector_make(*args, **kwargs)

class ShortPNdetector_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::ncofdm::ShortPNdetector)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::ncofdm::ShortPNdetector)> self) -> ShortPNdetector_sptr
        __init__(boost::shared_ptr<(gr::ncofdm::ShortPNdetector)> self, ShortPNdetector p) -> ShortPNdetector_sptr
        """
        this = _ncofdm_swig.new_ShortPNdetector_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(ShortPNdetector_sptr self) -> ShortPNdetector"""
        return _ncofdm_swig.ShortPNdetector_sptr___deref__(self)

    __swig_destroy__ = _ncofdm_swig.delete_ShortPNdetector_sptr
    __del__ = lambda self : None;
    def make(self, *args, **kwargs):
        """make(ShortPNdetector_sptr self, int fft_len, int cp_len, int ShSeqRep, int ShSeqLen, float threshold) -> ShortPNdetector_sptr"""
        return _ncofdm_swig.ShortPNdetector_sptr_make(self, *args, **kwargs)

    def history(self):
        """history(ShortPNdetector_sptr self) -> unsigned int"""
        return _ncofdm_swig.ShortPNdetector_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(ShortPNdetector_sptr self, int which, int delay)
        declare_sample_delay(ShortPNdetector_sptr self, unsigned int delay)
        """
        return _ncofdm_swig.ShortPNdetector_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(ShortPNdetector_sptr self, int which) -> unsigned int"""
        return _ncofdm_swig.ShortPNdetector_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(ShortPNdetector_sptr self) -> int"""
        return _ncofdm_swig.ShortPNdetector_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(ShortPNdetector_sptr self) -> double"""
        return _ncofdm_swig.ShortPNdetector_sptr_relative_rate(self)

    def start(self):
        """start(ShortPNdetector_sptr self) -> bool"""
        return _ncofdm_swig.ShortPNdetector_sptr_start(self)

    def stop(self):
        """stop(ShortPNdetector_sptr self) -> bool"""
        return _ncofdm_swig.ShortPNdetector_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(ShortPNdetector_sptr self, unsigned int which_input) -> uint64_t"""
        return _ncofdm_swig.ShortPNdetector_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(ShortPNdetector_sptr self, unsigned int which_output) -> uint64_t"""
        return _ncofdm_swig.ShortPNdetector_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(ShortPNdetector_sptr self) -> int"""
        return _ncofdm_swig.ShortPNdetector_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(ShortPNdetector_sptr self, int m)"""
        return _ncofdm_swig.ShortPNdetector_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(ShortPNdetector_sptr self)"""
        return _ncofdm_swig.ShortPNdetector_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(ShortPNdetector_sptr self) -> bool"""
        return _ncofdm_swig.ShortPNdetector_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(ShortPNdetector_sptr self, int m)"""
        return _ncofdm_swig.ShortPNdetector_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(ShortPNdetector_sptr self) -> int"""
        return _ncofdm_swig.ShortPNdetector_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(ShortPNdetector_sptr self, int i) -> long"""
        return _ncofdm_swig.ShortPNdetector_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(ShortPNdetector_sptr self, long max_output_buffer)
        set_max_output_buffer(ShortPNdetector_sptr self, int port, long max_output_buffer)
        """
        return _ncofdm_swig.ShortPNdetector_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(ShortPNdetector_sptr self, int i) -> long"""
        return _ncofdm_swig.ShortPNdetector_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(ShortPNdetector_sptr self, long min_output_buffer)
        set_min_output_buffer(ShortPNdetector_sptr self, int port, long min_output_buffer)
        """
        return _ncofdm_swig.ShortPNdetector_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(ShortPNdetector_sptr self) -> float"""
        return _ncofdm_swig.ShortPNdetector_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(ShortPNdetector_sptr self) -> float"""
        return _ncofdm_swig.ShortPNdetector_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(ShortPNdetector_sptr self) -> float"""
        return _ncofdm_swig.ShortPNdetector_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(ShortPNdetector_sptr self) -> float"""
        return _ncofdm_swig.ShortPNdetector_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(ShortPNdetector_sptr self) -> float"""
        return _ncofdm_swig.ShortPNdetector_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(ShortPNdetector_sptr self) -> float"""
        return _ncofdm_swig.ShortPNdetector_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(ShortPNdetector_sptr self, int which) -> float
        pc_input_buffers_full(ShortPNdetector_sptr self) -> pmt_vector_float
        """
        return _ncofdm_swig.ShortPNdetector_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(ShortPNdetector_sptr self, int which) -> float
        pc_input_buffers_full_avg(ShortPNdetector_sptr self) -> pmt_vector_float
        """
        return _ncofdm_swig.ShortPNdetector_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(ShortPNdetector_sptr self, int which) -> float
        pc_input_buffers_full_var(ShortPNdetector_sptr self) -> pmt_vector_float
        """
        return _ncofdm_swig.ShortPNdetector_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(ShortPNdetector_sptr self, int which) -> float
        pc_output_buffers_full(ShortPNdetector_sptr self) -> pmt_vector_float
        """
        return _ncofdm_swig.ShortPNdetector_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(ShortPNdetector_sptr self, int which) -> float
        pc_output_buffers_full_avg(ShortPNdetector_sptr self) -> pmt_vector_float
        """
        return _ncofdm_swig.ShortPNdetector_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(ShortPNdetector_sptr self, int which) -> float
        pc_output_buffers_full_var(ShortPNdetector_sptr self) -> pmt_vector_float
        """
        return _ncofdm_swig.ShortPNdetector_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(ShortPNdetector_sptr self) -> float"""
        return _ncofdm_swig.ShortPNdetector_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(ShortPNdetector_sptr self) -> float"""
        return _ncofdm_swig.ShortPNdetector_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(ShortPNdetector_sptr self) -> float"""
        return _ncofdm_swig.ShortPNdetector_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(ShortPNdetector_sptr self) -> float"""
        return _ncofdm_swig.ShortPNdetector_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self):
        """pc_throughput_avg(ShortPNdetector_sptr self) -> float"""
        return _ncofdm_swig.ShortPNdetector_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(ShortPNdetector_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _ncofdm_swig.ShortPNdetector_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(ShortPNdetector_sptr self)"""
        return _ncofdm_swig.ShortPNdetector_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(ShortPNdetector_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _ncofdm_swig.ShortPNdetector_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(ShortPNdetector_sptr self) -> int"""
        return _ncofdm_swig.ShortPNdetector_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(ShortPNdetector_sptr self) -> int"""
        return _ncofdm_swig.ShortPNdetector_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(ShortPNdetector_sptr self, int priority) -> int"""
        return _ncofdm_swig.ShortPNdetector_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(ShortPNdetector_sptr self) -> std::string"""
        return _ncofdm_swig.ShortPNdetector_sptr_name(self)

    def symbol_name(self):
        """symbol_name(ShortPNdetector_sptr self) -> std::string"""
        return _ncofdm_swig.ShortPNdetector_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(ShortPNdetector_sptr self) -> io_signature_sptr"""
        return _ncofdm_swig.ShortPNdetector_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(ShortPNdetector_sptr self) -> io_signature_sptr"""
        return _ncofdm_swig.ShortPNdetector_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(ShortPNdetector_sptr self) -> long"""
        return _ncofdm_swig.ShortPNdetector_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(ShortPNdetector_sptr self) -> basic_block_sptr"""
        return _ncofdm_swig.ShortPNdetector_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(ShortPNdetector_sptr self, int ninputs, int noutputs) -> bool"""
        return _ncofdm_swig.ShortPNdetector_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(ShortPNdetector_sptr self) -> std::string"""
        return _ncofdm_swig.ShortPNdetector_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(ShortPNdetector_sptr self, std::string name)"""
        return _ncofdm_swig.ShortPNdetector_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(ShortPNdetector_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _ncofdm_swig.ShortPNdetector_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(ShortPNdetector_sptr self) -> swig_int_ptr"""
        return _ncofdm_swig.ShortPNdetector_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(ShortPNdetector_sptr self) -> swig_int_ptr"""
        return _ncofdm_swig.ShortPNdetector_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(ShortPNdetector_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _ncofdm_swig.ShortPNdetector_sptr_message_subscribers(self, *args, **kwargs)

ShortPNdetector_sptr_swigregister = _ncofdm_swig.ShortPNdetector_sptr_swigregister
ShortPNdetector_sptr_swigregister(ShortPNdetector_sptr)

ShortPNdetector_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
ShortPNdetector = ShortPNdetector.make;

class add_cp_underlay(object):
    """Proxy of C++ gr::ncofdm::add_cp_underlay class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(*args, **kwargs):
        """
        make(int fft_len, int cp_len, float sp_ratio_db, int data_len, int shseq_len, int shseq_rep, 
            pmt_vector_cfloat shseq, int dataseq_len, pmt_vector_cfloat dataseq, 
            int lgseq_len, pmt_vector_cfloat lgseq, std::string const & len_tag_key) -> add_cp_underlay_sptr
        """
        return _ncofdm_swig.add_cp_underlay_make(*args, **kwargs)

    make = staticmethod(make)
    __swig_destroy__ = _ncofdm_swig.delete_add_cp_underlay
    __del__ = lambda self : None;
add_cp_underlay_swigregister = _ncofdm_swig.add_cp_underlay_swigregister
add_cp_underlay_swigregister(add_cp_underlay)

def add_cp_underlay_make(*args, **kwargs):
  """
    add_cp_underlay_make(int fft_len, int cp_len, float sp_ratio_db, int data_len, int shseq_len, int shseq_rep, 
        pmt_vector_cfloat shseq, int dataseq_len, pmt_vector_cfloat dataseq, 
        int lgseq_len, pmt_vector_cfloat lgseq, std::string const & len_tag_key) -> add_cp_underlay_sptr
    """
  return _ncofdm_swig.add_cp_underlay_make(*args, **kwargs)

class add_cp_underlay_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::ncofdm::add_cp_underlay)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::ncofdm::add_cp_underlay)> self) -> add_cp_underlay_sptr
        __init__(boost::shared_ptr<(gr::ncofdm::add_cp_underlay)> self, add_cp_underlay p) -> add_cp_underlay_sptr
        """
        this = _ncofdm_swig.new_add_cp_underlay_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(add_cp_underlay_sptr self) -> add_cp_underlay"""
        return _ncofdm_swig.add_cp_underlay_sptr___deref__(self)

    __swig_destroy__ = _ncofdm_swig.delete_add_cp_underlay_sptr
    __del__ = lambda self : None;
    def make(self, *args, **kwargs):
        """
        make(add_cp_underlay_sptr self, int fft_len, int cp_len, float sp_ratio_db, int data_len, int shseq_len, int shseq_rep, 
            pmt_vector_cfloat shseq, int dataseq_len, pmt_vector_cfloat dataseq, 
            int lgseq_len, pmt_vector_cfloat lgseq, std::string const & len_tag_key) -> add_cp_underlay_sptr
        """
        return _ncofdm_swig.add_cp_underlay_sptr_make(self, *args, **kwargs)

    def history(self):
        """history(add_cp_underlay_sptr self) -> unsigned int"""
        return _ncofdm_swig.add_cp_underlay_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(add_cp_underlay_sptr self, int which, int delay)
        declare_sample_delay(add_cp_underlay_sptr self, unsigned int delay)
        """
        return _ncofdm_swig.add_cp_underlay_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(add_cp_underlay_sptr self, int which) -> unsigned int"""
        return _ncofdm_swig.add_cp_underlay_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(add_cp_underlay_sptr self) -> int"""
        return _ncofdm_swig.add_cp_underlay_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(add_cp_underlay_sptr self) -> double"""
        return _ncofdm_swig.add_cp_underlay_sptr_relative_rate(self)

    def start(self):
        """start(add_cp_underlay_sptr self) -> bool"""
        return _ncofdm_swig.add_cp_underlay_sptr_start(self)

    def stop(self):
        """stop(add_cp_underlay_sptr self) -> bool"""
        return _ncofdm_swig.add_cp_underlay_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(add_cp_underlay_sptr self, unsigned int which_input) -> uint64_t"""
        return _ncofdm_swig.add_cp_underlay_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(add_cp_underlay_sptr self, unsigned int which_output) -> uint64_t"""
        return _ncofdm_swig.add_cp_underlay_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(add_cp_underlay_sptr self) -> int"""
        return _ncofdm_swig.add_cp_underlay_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(add_cp_underlay_sptr self, int m)"""
        return _ncofdm_swig.add_cp_underlay_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(add_cp_underlay_sptr self)"""
        return _ncofdm_swig.add_cp_underlay_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(add_cp_underlay_sptr self) -> bool"""
        return _ncofdm_swig.add_cp_underlay_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(add_cp_underlay_sptr self, int m)"""
        return _ncofdm_swig.add_cp_underlay_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(add_cp_underlay_sptr self) -> int"""
        return _ncofdm_swig.add_cp_underlay_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(add_cp_underlay_sptr self, int i) -> long"""
        return _ncofdm_swig.add_cp_underlay_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(add_cp_underlay_sptr self, long max_output_buffer)
        set_max_output_buffer(add_cp_underlay_sptr self, int port, long max_output_buffer)
        """
        return _ncofdm_swig.add_cp_underlay_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(add_cp_underlay_sptr self, int i) -> long"""
        return _ncofdm_swig.add_cp_underlay_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(add_cp_underlay_sptr self, long min_output_buffer)
        set_min_output_buffer(add_cp_underlay_sptr self, int port, long min_output_buffer)
        """
        return _ncofdm_swig.add_cp_underlay_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(add_cp_underlay_sptr self) -> float"""
        return _ncofdm_swig.add_cp_underlay_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(add_cp_underlay_sptr self) -> float"""
        return _ncofdm_swig.add_cp_underlay_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(add_cp_underlay_sptr self) -> float"""
        return _ncofdm_swig.add_cp_underlay_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(add_cp_underlay_sptr self) -> float"""
        return _ncofdm_swig.add_cp_underlay_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(add_cp_underlay_sptr self) -> float"""
        return _ncofdm_swig.add_cp_underlay_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(add_cp_underlay_sptr self) -> float"""
        return _ncofdm_swig.add_cp_underlay_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(add_cp_underlay_sptr self, int which) -> float
        pc_input_buffers_full(add_cp_underlay_sptr self) -> pmt_vector_float
        """
        return _ncofdm_swig.add_cp_underlay_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(add_cp_underlay_sptr self, int which) -> float
        pc_input_buffers_full_avg(add_cp_underlay_sptr self) -> pmt_vector_float
        """
        return _ncofdm_swig.add_cp_underlay_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(add_cp_underlay_sptr self, int which) -> float
        pc_input_buffers_full_var(add_cp_underlay_sptr self) -> pmt_vector_float
        """
        return _ncofdm_swig.add_cp_underlay_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(add_cp_underlay_sptr self, int which) -> float
        pc_output_buffers_full(add_cp_underlay_sptr self) -> pmt_vector_float
        """
        return _ncofdm_swig.add_cp_underlay_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(add_cp_underlay_sptr self, int which) -> float
        pc_output_buffers_full_avg(add_cp_underlay_sptr self) -> pmt_vector_float
        """
        return _ncofdm_swig.add_cp_underlay_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(add_cp_underlay_sptr self, int which) -> float
        pc_output_buffers_full_var(add_cp_underlay_sptr self) -> pmt_vector_float
        """
        return _ncofdm_swig.add_cp_underlay_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(add_cp_underlay_sptr self) -> float"""
        return _ncofdm_swig.add_cp_underlay_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(add_cp_underlay_sptr self) -> float"""
        return _ncofdm_swig.add_cp_underlay_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(add_cp_underlay_sptr self) -> float"""
        return _ncofdm_swig.add_cp_underlay_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(add_cp_underlay_sptr self) -> float"""
        return _ncofdm_swig.add_cp_underlay_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self):
        """pc_throughput_avg(add_cp_underlay_sptr self) -> float"""
        return _ncofdm_swig.add_cp_underlay_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(add_cp_underlay_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _ncofdm_swig.add_cp_underlay_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(add_cp_underlay_sptr self)"""
        return _ncofdm_swig.add_cp_underlay_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(add_cp_underlay_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _ncofdm_swig.add_cp_underlay_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(add_cp_underlay_sptr self) -> int"""
        return _ncofdm_swig.add_cp_underlay_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(add_cp_underlay_sptr self) -> int"""
        return _ncofdm_swig.add_cp_underlay_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(add_cp_underlay_sptr self, int priority) -> int"""
        return _ncofdm_swig.add_cp_underlay_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(add_cp_underlay_sptr self) -> std::string"""
        return _ncofdm_swig.add_cp_underlay_sptr_name(self)

    def symbol_name(self):
        """symbol_name(add_cp_underlay_sptr self) -> std::string"""
        return _ncofdm_swig.add_cp_underlay_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(add_cp_underlay_sptr self) -> io_signature_sptr"""
        return _ncofdm_swig.add_cp_underlay_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(add_cp_underlay_sptr self) -> io_signature_sptr"""
        return _ncofdm_swig.add_cp_underlay_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(add_cp_underlay_sptr self) -> long"""
        return _ncofdm_swig.add_cp_underlay_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(add_cp_underlay_sptr self) -> basic_block_sptr"""
        return _ncofdm_swig.add_cp_underlay_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(add_cp_underlay_sptr self, int ninputs, int noutputs) -> bool"""
        return _ncofdm_swig.add_cp_underlay_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(add_cp_underlay_sptr self) -> std::string"""
        return _ncofdm_swig.add_cp_underlay_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(add_cp_underlay_sptr self, std::string name)"""
        return _ncofdm_swig.add_cp_underlay_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(add_cp_underlay_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _ncofdm_swig.add_cp_underlay_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(add_cp_underlay_sptr self) -> swig_int_ptr"""
        return _ncofdm_swig.add_cp_underlay_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(add_cp_underlay_sptr self) -> swig_int_ptr"""
        return _ncofdm_swig.add_cp_underlay_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(add_cp_underlay_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _ncofdm_swig.add_cp_underlay_sptr_message_subscribers(self, *args, **kwargs)

add_cp_underlay_sptr_swigregister = _ncofdm_swig.add_cp_underlay_sptr_swigregister
add_cp_underlay_sptr_swigregister(add_cp_underlay_sptr)

add_cp_underlay_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
add_cp_underlay = add_cp_underlay.make;

class LongPNcorrV2(object):
    """Proxy of C++ gr::ncofdm::LongPNcorrV2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(*args, **kwargs):
        """make(int fft_len, int cp_len, int LgSeqLen, pmt_vector_cfloat LgSeq, float LgThres, int UpdateInterval) -> LongPNcorrV2_sptr"""
        return _ncofdm_swig.LongPNcorrV2_make(*args, **kwargs)

    make = staticmethod(make)
    __swig_destroy__ = _ncofdm_swig.delete_LongPNcorrV2
    __del__ = lambda self : None;
LongPNcorrV2_swigregister = _ncofdm_swig.LongPNcorrV2_swigregister
LongPNcorrV2_swigregister(LongPNcorrV2)

def LongPNcorrV2_make(*args, **kwargs):
  """LongPNcorrV2_make(int fft_len, int cp_len, int LgSeqLen, pmt_vector_cfloat LgSeq, float LgThres, int UpdateInterval) -> LongPNcorrV2_sptr"""
  return _ncofdm_swig.LongPNcorrV2_make(*args, **kwargs)

class LongPNcorrV2_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::ncofdm::LongPNcorrV2)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::ncofdm::LongPNcorrV2)> self) -> LongPNcorrV2_sptr
        __init__(boost::shared_ptr<(gr::ncofdm::LongPNcorrV2)> self, LongPNcorrV2 p) -> LongPNcorrV2_sptr
        """
        this = _ncofdm_swig.new_LongPNcorrV2_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(LongPNcorrV2_sptr self) -> LongPNcorrV2"""
        return _ncofdm_swig.LongPNcorrV2_sptr___deref__(self)

    __swig_destroy__ = _ncofdm_swig.delete_LongPNcorrV2_sptr
    __del__ = lambda self : None;
    def make(self, *args, **kwargs):
        """make(LongPNcorrV2_sptr self, int fft_len, int cp_len, int LgSeqLen, pmt_vector_cfloat LgSeq, float LgThres, int UpdateInterval) -> LongPNcorrV2_sptr"""
        return _ncofdm_swig.LongPNcorrV2_sptr_make(self, *args, **kwargs)

    def history(self):
        """history(LongPNcorrV2_sptr self) -> unsigned int"""
        return _ncofdm_swig.LongPNcorrV2_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(LongPNcorrV2_sptr self, int which, int delay)
        declare_sample_delay(LongPNcorrV2_sptr self, unsigned int delay)
        """
        return _ncofdm_swig.LongPNcorrV2_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(LongPNcorrV2_sptr self, int which) -> unsigned int"""
        return _ncofdm_swig.LongPNcorrV2_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(LongPNcorrV2_sptr self) -> int"""
        return _ncofdm_swig.LongPNcorrV2_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(LongPNcorrV2_sptr self) -> double"""
        return _ncofdm_swig.LongPNcorrV2_sptr_relative_rate(self)

    def start(self):
        """start(LongPNcorrV2_sptr self) -> bool"""
        return _ncofdm_swig.LongPNcorrV2_sptr_start(self)

    def stop(self):
        """stop(LongPNcorrV2_sptr self) -> bool"""
        return _ncofdm_swig.LongPNcorrV2_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(LongPNcorrV2_sptr self, unsigned int which_input) -> uint64_t"""
        return _ncofdm_swig.LongPNcorrV2_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(LongPNcorrV2_sptr self, unsigned int which_output) -> uint64_t"""
        return _ncofdm_swig.LongPNcorrV2_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(LongPNcorrV2_sptr self) -> int"""
        return _ncofdm_swig.LongPNcorrV2_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(LongPNcorrV2_sptr self, int m)"""
        return _ncofdm_swig.LongPNcorrV2_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(LongPNcorrV2_sptr self)"""
        return _ncofdm_swig.LongPNcorrV2_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(LongPNcorrV2_sptr self) -> bool"""
        return _ncofdm_swig.LongPNcorrV2_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(LongPNcorrV2_sptr self, int m)"""
        return _ncofdm_swig.LongPNcorrV2_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(LongPNcorrV2_sptr self) -> int"""
        return _ncofdm_swig.LongPNcorrV2_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(LongPNcorrV2_sptr self, int i) -> long"""
        return _ncofdm_swig.LongPNcorrV2_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(LongPNcorrV2_sptr self, long max_output_buffer)
        set_max_output_buffer(LongPNcorrV2_sptr self, int port, long max_output_buffer)
        """
        return _ncofdm_swig.LongPNcorrV2_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(LongPNcorrV2_sptr self, int i) -> long"""
        return _ncofdm_swig.LongPNcorrV2_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(LongPNcorrV2_sptr self, long min_output_buffer)
        set_min_output_buffer(LongPNcorrV2_sptr self, int port, long min_output_buffer)
        """
        return _ncofdm_swig.LongPNcorrV2_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(LongPNcorrV2_sptr self) -> float"""
        return _ncofdm_swig.LongPNcorrV2_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(LongPNcorrV2_sptr self) -> float"""
        return _ncofdm_swig.LongPNcorrV2_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(LongPNcorrV2_sptr self) -> float"""
        return _ncofdm_swig.LongPNcorrV2_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(LongPNcorrV2_sptr self) -> float"""
        return _ncofdm_swig.LongPNcorrV2_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(LongPNcorrV2_sptr self) -> float"""
        return _ncofdm_swig.LongPNcorrV2_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(LongPNcorrV2_sptr self) -> float"""
        return _ncofdm_swig.LongPNcorrV2_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(LongPNcorrV2_sptr self, int which) -> float
        pc_input_buffers_full(LongPNcorrV2_sptr self) -> pmt_vector_float
        """
        return _ncofdm_swig.LongPNcorrV2_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(LongPNcorrV2_sptr self, int which) -> float
        pc_input_buffers_full_avg(LongPNcorrV2_sptr self) -> pmt_vector_float
        """
        return _ncofdm_swig.LongPNcorrV2_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(LongPNcorrV2_sptr self, int which) -> float
        pc_input_buffers_full_var(LongPNcorrV2_sptr self) -> pmt_vector_float
        """
        return _ncofdm_swig.LongPNcorrV2_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(LongPNcorrV2_sptr self, int which) -> float
        pc_output_buffers_full(LongPNcorrV2_sptr self) -> pmt_vector_float
        """
        return _ncofdm_swig.LongPNcorrV2_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(LongPNcorrV2_sptr self, int which) -> float
        pc_output_buffers_full_avg(LongPNcorrV2_sptr self) -> pmt_vector_float
        """
        return _ncofdm_swig.LongPNcorrV2_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(LongPNcorrV2_sptr self, int which) -> float
        pc_output_buffers_full_var(LongPNcorrV2_sptr self) -> pmt_vector_float
        """
        return _ncofdm_swig.LongPNcorrV2_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(LongPNcorrV2_sptr self) -> float"""
        return _ncofdm_swig.LongPNcorrV2_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(LongPNcorrV2_sptr self) -> float"""
        return _ncofdm_swig.LongPNcorrV2_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(LongPNcorrV2_sptr self) -> float"""
        return _ncofdm_swig.LongPNcorrV2_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(LongPNcorrV2_sptr self) -> float"""
        return _ncofdm_swig.LongPNcorrV2_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self):
        """pc_throughput_avg(LongPNcorrV2_sptr self) -> float"""
        return _ncofdm_swig.LongPNcorrV2_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(LongPNcorrV2_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _ncofdm_swig.LongPNcorrV2_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(LongPNcorrV2_sptr self)"""
        return _ncofdm_swig.LongPNcorrV2_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(LongPNcorrV2_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _ncofdm_swig.LongPNcorrV2_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(LongPNcorrV2_sptr self) -> int"""
        return _ncofdm_swig.LongPNcorrV2_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(LongPNcorrV2_sptr self) -> int"""
        return _ncofdm_swig.LongPNcorrV2_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(LongPNcorrV2_sptr self, int priority) -> int"""
        return _ncofdm_swig.LongPNcorrV2_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(LongPNcorrV2_sptr self) -> std::string"""
        return _ncofdm_swig.LongPNcorrV2_sptr_name(self)

    def symbol_name(self):
        """symbol_name(LongPNcorrV2_sptr self) -> std::string"""
        return _ncofdm_swig.LongPNcorrV2_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(LongPNcorrV2_sptr self) -> io_signature_sptr"""
        return _ncofdm_swig.LongPNcorrV2_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(LongPNcorrV2_sptr self) -> io_signature_sptr"""
        return _ncofdm_swig.LongPNcorrV2_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(LongPNcorrV2_sptr self) -> long"""
        return _ncofdm_swig.LongPNcorrV2_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(LongPNcorrV2_sptr self) -> basic_block_sptr"""
        return _ncofdm_swig.LongPNcorrV2_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(LongPNcorrV2_sptr self, int ninputs, int noutputs) -> bool"""
        return _ncofdm_swig.LongPNcorrV2_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(LongPNcorrV2_sptr self) -> std::string"""
        return _ncofdm_swig.LongPNcorrV2_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(LongPNcorrV2_sptr self, std::string name)"""
        return _ncofdm_swig.LongPNcorrV2_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(LongPNcorrV2_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _ncofdm_swig.LongPNcorrV2_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(LongPNcorrV2_sptr self) -> swig_int_ptr"""
        return _ncofdm_swig.LongPNcorrV2_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(LongPNcorrV2_sptr self) -> swig_int_ptr"""
        return _ncofdm_swig.LongPNcorrV2_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(LongPNcorrV2_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _ncofdm_swig.LongPNcorrV2_sptr_message_subscribers(self, *args, **kwargs)

LongPNcorrV2_sptr_swigregister = _ncofdm_swig.LongPNcorrV2_sptr_swigregister
LongPNcorrV2_sptr_swigregister(LongPNcorrV2_sptr)

LongPNcorrV2_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
LongPNcorrV2 = LongPNcorrV2.make;



